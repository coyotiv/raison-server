version: "3.8"

services:
  traefik:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --api.dashboard=true
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.runCommand({ ping: 1 }).ok' | grep 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_CONNECTION_STRING=mongodb://mongo:27017
      - SEED_FILE=${SEED_FILE:-}
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./backend:/app
      - ./agents.json:/app/agents.json:ro
      - /app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.priority=100"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.routers.backend.middlewares=api-stripprefix"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.scheme=http"
      - "traefik.http.services.backend.loadbalancer.passhostheader=true"
    depends_on:
      mongo:
        condition: service_healthy

  frontend:
    image: node:20-alpine
    working_dir: /app
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=1"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"

volumes:
  mongo-data:

